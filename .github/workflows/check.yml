name: Analyze and check app

on:
  push:
  pull_request:

jobs:
  check:
    name: Check application

    runs-on: ubuntu-latest

    steps:
      ### INITIAL ###
      - name: Clone application code
        uses: actions/checkout@v3
      - name: Clone flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.3.2'
          channel: stable
          cache: true

      ### PREPARATION ###
      - name: Check flutter installation
        run: flutter --version
      - name: Get all dependecies
        run: flutter pub get
      - name: Generate ".env" file for "envied" package
        run: echo "SENTRY_DSN=\"\"" > .env
      - name: Generate all needed code
        run: flutter pub run build_runner build --delete-conflicting-outputs lib && flutter pub run slang

      ### ANALYSIS ###
      - name: Ensure that code is formatted correctly
        run: flutter format --set-exit-if-changed --dry-run $(git ls-files | grep --colour=never -e ".*\.dart")
      - name: Analyze code to find critical problems
        run: flutter analyze --no-fatal-infos

      ### TESTS ###
      - name: Run tests in "storage" module
        run: (cd modules/storage && flutter test)
      - name: Run tests for main package
        run: flutter test

      ### REPORT ###
      - name: Dart Code Metrics
        uses: dart-code-checker/dart-code-metrics-action@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
